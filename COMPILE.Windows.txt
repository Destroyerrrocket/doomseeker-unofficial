================================================================================
Compiling Doomseeker in Microsoft Visual Studio 2013 Express with Qt 5.x
Written by Zalewa, September 2015
================================================================================
1. Quick introduction.

This guide describes how I compile Doomseeker on Windows.
This is a solution that I find efficient enough.

Compiling other people's programs on Windows is usually a difficult and
frustrating task. If you follow this guide you should be able to compile
binaries for Doomseeker, Wadseeker and all plugins by yourself.
================================================================================
2. Compiler.

On Windows only one compiler is officially supported: the one that comes with
Microsoft Visual Studio 2013.

First step:
Get Microsoft Visual Studio 2013 Express. It's free for commercial
and non-commercial use.
================================================================================
3. Qt.

This instruction was written when Qt 5.7.0 was the newest available version and
it works against this version. Your results may vary if you use newer Qt.
Using older Qt5 versions is discouraged as they had localization bugs and
they linked against ICU (about 30MB of additional DLL dependency).

Get Qt 5.7.0 for MSVC 2013 from Qt's official home page and install it.

Once Qt is installed you should modify your PATH environment variable so that it
contains path to the "bin" directory inside your Qt installation. It is possible
that Qt installer will do this for you, but you should check anyway.
Setting this up will allow CMake to correctly detect all modules of Qt.
This guide will not describe how to modify environment variables in Windows.
Once you modify the PATH variable you may have to reboot your system.

================================================================================
4. OpenSSL

Link:
http://doomseeker.drdteam.org/files/dependencies/OpenSSL-1.0.2a-VC-32.7z

This is for completion only, so it's optional. Doomseeker will work without
OpenSSL, but it won't be able to access HTTPS sites. This is a very crippling
flaw in current era. And also, without those libs, you will most likely get
a very nasty message box popup during startup, followed by a second very nasty
message box popup. If that doesn't happen, then without this you'll get annoying
error messages each time Doomseeker accesses the web.

================================================================================
5. CMake.

http://www.cmake.org/

CMake is a quite useful tool that helps with creation of project files and
makefiles for various different compilers and Operating Systems. It allows
programmers to avoid uploading all that mess that IDEs create when they
spawn a new project. Also, it helps with keeping track of all the dependencies
that the program needs in order to compile.

At the moment when this was written the newest stable
CMake version was 3.7.0-rc1.

Get CMake now.

Launch CMake GUI.

The first thing you need to set is "Where to build the binaries". This
should be located somewhere outside the repository. For example:
D:/dev/Doomseeker/visual2013

The second thing is "Where is the source code". Pick the top-most directory
that contains the CMakeLists.txt file. In case of Doomseeker this is the root
directory of the repository. For example:
D:/dev/Doomseeker/repo

Now press "Configure" button.

CMake should prompt about the type of compiler you want to use. Pick
"Visual Studio 12". The very important thing here is to define special toolset
to ensure that folks who use Windows XP can run Doomseeker. Specify "v120_xp"
as the toolset. Don't make a typo! Also make sure that
"Use default native compilers" option is selected.

Now press "Finish". If you did everything right up to this
point then CMake should find the MSVC 2013 and Qt installations. The initial
configuration may take some time but should finish without errors. Once done,
CMake will display some key-value positions in a table with a red background.
Red background means that these settings are new.

Find "Grouped" and "Advanced" checkboxes in CMake GUI and check them both. The
list should now change and you should see following items:
- Ungrouped Entries
- BUILD
- CMAKE
- OPENSSL

When you finish setting everything press "Configure" button again so that all
red options should turn to normal background color and then press "Generate"
button. This should create the ".sln" file in the target directory. You may
now open this file with Visual Studio 2013 and then try to compile the program.
================================================================================
6. Tweaks.

6.1. Concurrent compilation.

Find CMAKE_CXX_FLAGS and CMAKE_C_FLAGS settings. Append /MP to the
end. Press "Configure", then "Generate".

Hint: When this is enabled, and compilation fails at first, try it
again. There's a chance it will succeed the next time.

6.2. Enabling INSTALL target.

Open OPENSSL branch and point both settings there to appropriate DLL files.
The setting names tell you which file you need for which setting.

Remember to change CMAKE_INSTALL_PREFIX path to something less stupid than
"C:\Program Files (x86)\DOOMSEEKER". Be aware that the installed files are
dumped directly to this directory.

================================================================================
Now you may build the program and while it compiles you may open one
of the source code files that I created back in 2009 and cry :)
================================================================================
